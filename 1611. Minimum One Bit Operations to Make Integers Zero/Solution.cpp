class Solution {
public:
    int minimumOneBitOperations(int n) {
        /*
        1 -> 0 // 1

        11 -> 01 -> 00 // 2
        10 -> 11 -> ... -> 00 // 3

        110 -> 010 -> ... -> 000 // 4
        111 -> 110 -> ... -> 000 // 5
        101 -> 111 -> ... -> 000 // 6
        100 -> 101 -> ... -> 000 // 7

        1100 -> 0100 -> ... -> 0000 // 8
        1101 -> 1100 -> ... -> 0000 // 9
        1111 -> 1101 -> ... -> 0000 // 10
        1110 -> 1111 -> ... -> 0000 // 11
        1010 -> 1111 -> ... -> 0000 // 12
        1011 -> 1010 -> ... -> 0000 // 13
        1001 -> 1011 -> ... -> 0000 // 14
        1000 -> 1001 -> ... -> 0000 // 15
        */
        if (n < 2) return n;
        int high = 0, m = n;
        while (m > 0) {
          high++;
          m >>= 1;
        }
        int res = pow(2, high) - 1;
        return res - minimumOneBitOperations(n ^ (1 << (high - 1)));
    }
};
